// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package gen

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	ArchivePlanByID(ctx context.Context, arg ArchivePlanByIDParams) (Plan, error)
	ArchivePlanBySlug(ctx context.Context, arg ArchivePlanBySlugParams) (Plan, error)
	AssignPlanToOrg(ctx context.Context, arg AssignPlanToOrgParams) (PlanAssignment, error)
	AssignPlanToUser(ctx context.Context, arg AssignPlanToUserParams) (PlanAssignment, error)
	CountFeatures(ctx context.Context, tenantSlug string) (int64, error)
	CountMeters(ctx context.Context, tenantSlug string) (int64, error)
	CountMetersByEventType(ctx context.Context, arg CountMetersByEventTypeParams) (int64, error)
	CountPlans(ctx context.Context, arg CountPlansParams) (int64, error)
	CreateFeature(ctx context.Context, arg CreateFeatureParams) (Feature, error)
	CreateMeter(ctx context.Context, arg CreateMeterParams) (Meter, error)
	CreatePlan(ctx context.Context, arg CreatePlanParams) (Plan, error)
	DeleteFeatureByID(ctx context.Context, arg DeleteFeatureByIDParams) error
	DeleteFeatureBySlug(ctx context.Context, arg DeleteFeatureBySlugParams) error
	DeleteMeterByID(ctx context.Context, arg DeleteMeterByIDParams) error
	DeleteMeterBySlug(ctx context.Context, arg DeleteMeterBySlugParams) error
	DeletePlanByID(ctx context.Context, arg DeletePlanByIDParams) error
	DeletePlanBySlug(ctx context.Context, arg DeletePlanBySlugParams) error
	GetFeatureByID(ctx context.Context, arg GetFeatureByIDParams) (Feature, error)
	GetFeatureBySlug(ctx context.Context, arg GetFeatureBySlugParams) (Feature, error)
	GetMeterByID(ctx context.Context, arg GetMeterByIDParams) (Meter, error)
	GetMeterBySlug(ctx context.Context, arg GetMeterBySlugParams) (Meter, error)
	GetPlanByID(ctx context.Context, arg GetPlanByIDParams) (Plan, error)
	GetPlanBySlug(ctx context.Context, arg GetPlanBySlugParams) (Plan, error)
	GetPropertiesByEventType(ctx context.Context, arg GetPropertiesByEventTypeParams) ([]interface{}, error)
	GetValuePropertiesByEventType(ctx context.Context, arg GetValuePropertiesByEventTypeParams) ([]pgtype.Text, error)
	ListFeaturesPaginated(ctx context.Context, arg ListFeaturesPaginatedParams) ([]Feature, error)
	ListMetersByEventTypes(ctx context.Context, arg ListMetersByEventTypesParams) ([]Meter, error)
	ListMetersPaginated(ctx context.Context, arg ListMetersPaginatedParams) ([]Meter, error)
	ListPlansPaginated(ctx context.Context, arg ListPlansPaginatedParams) ([]Plan, error)
	UnArchivePlanByID(ctx context.Context, arg UnArchivePlanByIDParams) (Plan, error)
	UnArchivePlanBySlug(ctx context.Context, arg UnArchivePlanBySlugParams) (Plan, error)
	UnAssignPlanToOrg(ctx context.Context, arg UnAssignPlanToOrgParams) error
	UnAssignPlanToUser(ctx context.Context, arg UnAssignPlanToUserParams) error
	UpdateFeatureByID(ctx context.Context, arg UpdateFeatureByIDParams) (Feature, error)
	UpdateFeatureBySlug(ctx context.Context, arg UpdateFeatureBySlugParams) (Feature, error)
	UpdateMeterByID(ctx context.Context, arg UpdateMeterByIDParams) (Meter, error)
	UpdateMeterBySlug(ctx context.Context, arg UpdateMeterBySlugParams) (Meter, error)
	UpdateOrgsValidFromAndUntil(ctx context.Context, arg UpdateOrgsValidFromAndUntilParams) (PlanAssignment, error)
	UpdatePlanByID(ctx context.Context, arg UpdatePlanByIDParams) (Plan, error)
	UpdatePlanBySlug(ctx context.Context, arg UpdatePlanBySlugParams) (Plan, error)
	UpdateUsersValidFromAndUntil(ctx context.Context, arg UpdateUsersValidFromAndUntilParams) (PlanAssignment, error)
}

var _ Querier = (*Queries)(nil)
